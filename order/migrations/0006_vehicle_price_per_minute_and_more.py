# Generated by Django 4.2.5 on 2024-02-04 10:48

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models

import helpers.db_helpers


class Migration(migrations.Migration):
    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("rider", "0011_alter_rider_status"),
        ("customer", "0003_businesscustomer_individualcustomer_and_more"),
        ("order", "0005_alter_vehicle_file_url"),
    ]

    operations = [
        migrations.AddField(
            model_name="vehicle",
            name="price_per_minute",
            field=models.IntegerField(default=80, verbose_name="price per minute"),
        ),
        migrations.AlterField(
            model_name="vehicle",
            name="km_5_above_fare",
            field=models.IntegerField(verbose_name="price per km 5 above"),
        ),
        migrations.AlterField(
            model_name="vehicle",
            name="km_5_below_fare",
            field=models.IntegerField(verbose_name="price per km 0-5"),
        ),
        migrations.CreateModel(
            name="Order",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=helpers.db_helpers.generate_id,
                        editable=False,
                        max_length=60,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "deleted_at",
                    models.DateTimeField(blank=True, default=None, null=True),
                ),
                (
                    "state",
                    models.CharField(
                        choices=[("ACTIVE", "ACTIVE"), ("DELETED", "DELETED")],
                        default="ACTIVE",
                        max_length=20,
                    ),
                ),
                ("order_id", models.CharField(max_length=20)),
                ("chat_id", models.CharField(max_length=20)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("PENDING", "Pending"),
                            ("PROCESSING_ORDER", "Processing"),
                            ("RIDER_ACCEPTED_ORDER", "Rider accepted order"),
                            ("RIDER_PICKED_UP_ORDER", "Rider picked up order"),
                            ("ORDER_ARRIVED", "Order arrived"),
                            ("ORDER_DELIVERED", "Order delivered"),
                            ("ORDER_COMPLETED", "Order completed"),
                            ("ORDER_CANCELLED", "Order cancelled"),
                        ],
                        default="PENDING",
                        max_length=50,
                    ),
                ),
                (
                    "payment_method",
                    models.CharField(
                        blank=True,
                        choices=[("CASH", "Cash"), ("WALLET", "Wallet")],
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "payment_by",
                    models.CharField(
                        blank=True,
                        choices=[("RECEIVER", "Receiver"), ("SENDER", "Sender")],
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "pickup_number",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "pickup_contact_name",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "pickup_location",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "pickup_location_longitude",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "pickup_location_latitude",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "delivery_number",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "delivery_contact_name",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "delivery_location",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "delivery_location_longitude",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "delivery_location_latitude",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("delivery_time", models.DateTimeField(blank=True, null=True)),
                (
                    "order_stop_overs_meta_data",
                    models.JSONField(default=dict, help_text="Stop overs information"),
                ),
                (
                    "total_amount",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=10),
                ),
                (
                    "tip_amount",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "order_timeline",
                    models.JSONField(
                        default=dict, help_text="Ordered timeline tracking"
                    ),
                ),
                (
                    "order_meta_data",
                    models.JSONField(default=dict, help_text="Other order information"),
                ),
                ("distance", models.CharField(max_length=20)),
                (
                    "duration",
                    models.CharField(help_text="represented in seconds", max_length=20),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="created by",
                    ),
                ),
                (
                    "customer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="customer_order",
                        to="customer.customer",
                        verbose_name="customer",
                    ),
                ),
                (
                    "deleted_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="deleted by",
                    ),
                ),
                (
                    "rider",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="rider_order",
                        to="rider.rider",
                        verbose_name="rider",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="updated by",
                    ),
                ),
                (
                    "vehicle",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="vehicle_order",
                        to="order.vehicle",
                        verbose_name="vehicle",
                    ),
                ),
            ],
            options={
                "verbose_name": "order",
                "verbose_name_plural": "orders",
                "db_table": "order",
            },
        ),
        migrations.CreateModel(
            name="Address",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=helpers.db_helpers.generate_id,
                        editable=False,
                        max_length=60,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "deleted_at",
                    models.DateTimeField(blank=True, default=None, null=True),
                ),
                (
                    "formatted_address",
                    models.CharField(help_text="Full address", max_length=255),
                ),
                ("state", models.CharField(help_text="Full address", max_length=100)),
                ("country", models.CharField(help_text="Full address", max_length=100)),
                (
                    "longitude",
                    models.CharField(help_text="Address longitude", max_length=50),
                ),
                (
                    "latitude",
                    models.CharField(help_text="Address latitude", max_length=50),
                ),
                ("meta_data", models.JSONField()),
                ("save_address", models.BooleanField(default=False)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="created by",
                    ),
                ),
                (
                    "customer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="customer_address",
                        to="customer.customer",
                        verbose_name="customer",
                    ),
                ),
                (
                    "deleted_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="deleted by",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="updated by",
                    ),
                ),
            ],
            options={
                "verbose_name": "address",
                "verbose_name_plural": "addresses",
                "db_table": "address",
            },
        ),
    ]
